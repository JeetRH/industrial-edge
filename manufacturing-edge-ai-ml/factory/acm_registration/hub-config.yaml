apiVersion: v1
data:
  kubeconfig: ""
kind: Secret
metadata:
  name: bootstrap-hub-kubeconfig
  namespace: open-cluster-management-agent
type: Opaque

